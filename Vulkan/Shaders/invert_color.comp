
layout(binding = 0)         uniform sampler2D u_Input;
layout(binding = 1, rgba8)  uniform image2D u_Output;

layout(push_constant) uniform PushConstants
{
    uint g_width;
    uint g_height;
};

layout(local_size_x = 16, local_size_y = 16) in;

void main()
{
    const ivec2 gid = ivec2(gl_GlobalInvocationID.xy);
    if (gid.x >= g_width || gid.y >= g_height)
        return;

    vec2 uv = vec2(gid) / vec2(g_width, g_height);
    vec4 inputColor = texture(u_Input, uv);
    vec4 result = vec4(vec3(1.0) - inputColor.rgb, inputColor.a);
    imageStore(u_Output, gid, result);
}
